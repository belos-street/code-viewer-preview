# 这是一个Python示例
import math
from typing import List, Dict, Optional, Tuple

# 函数定义
def calculate_distance(x1: float, y1: float, x2: float, y2: float) -> float:
    """计算两点之间的欧几里得距离"""
    return math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)

# 类定义
class Point:
    def __init__(self, x: float, y: float):
        self.x = x
        self.y = y
    
    def distance_to(self, other: 'Point') -> float:
        return calculate_distance(self.x, self.y, other.x, other.y)
    
    def __str__(self) -> str:
        return f"Point({self.x}, {self.y})"

# 列表推导式
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
odd_numbers = [n for n in numbers if n % 2 != 0]
print(f"奇数: {odd_numbers}")

# 字典和字典推导式
user_scores = {"Alice": 95, "Bob": 87, "Charlie": 92, "David": 78}
high_scorers = {name: score for name, score in user_scores.items() if score >= 90}
print(f"高分用户: {high_scorers}")

# 装饰器
def timer(func):
    def wrapper(*args, **kwargs):
        import time
        start_time = time.time()
        result = func(*args, **kwargs)
        end_time = time.time()
        print(f"{func.__name__} 执行时间: {end_time - start_time:.4f} 秒")
        return result
    return wrapper

@timer
def slow_function(n: int) -> int:
    import time
    time.sleep(1)  # 模拟耗时操作
    return sum(range(n))

# 异常处理
try:
    result = 10 / 0
except ZeroDivisionError as e:
    print(f"错误: {e}")
finally:
    print("异常处理完成")

# 上下文管理器
class TempFile:
    def __init__(self, filename: str):
        self.filename = filename
    
    def __enter__(self):
        self.file = open(self.filename, 'w')
        return self.file
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        self.file.close()
        # 在实际应用中可能还需要删除临时文件

# 使用示例
if __name__ == "__main__":
    p1 = Point(0, 0)
    p2 = Point(3, 4)
    print(f"两点距离: {p1.distance_to(p2)}")
    
    result = slow_function(1000000)
    print(f"计算结果: {result}")